from pdf2image import convert_from_path
from bs4 import BeautifulSoup
from openai import OpenAI
from datetime import datetime
import requests, pytesseract, json

from supabase_connection import get_supabase_client

# Initialize OpenAI client with your API key
client = OpenAI(api_key="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")

class Main:
    def __init__(self):
        print("Running Harris Bot Scraper")


    def download_and_analyze_pdf(self, pdf_url, filename="document.pdf"):
        try:
            headers = {
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
                'Accept-Language': 'en-US,en;q=0.9',
                'Cache-Control': 'no-cache',
                'Connection': 'keep-alive',
                'Pragma': 'no-cache',
                'Sec-Fetch-Dest': 'document',
                'Sec-Fetch-Mode': 'navigate',
                'Sec-Fetch-Site': 'same-origin',
                'Sec-Fetch-User': '?1',
                'Upgrade-Insecure-Requests': '1',
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
                'sec-ch-ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"',
                'sec-ch-ua-mobile': '?0',
                'sec-ch-ua-platform': '"macOS"',
                'Cookie': 'f5avraaaaaaaaaaaaaaaa_session_=MBMCDAPNEAMCDBPEOCFFAMKLMAGKHNIAGCCGKNMIDHGLNBBINFLPJGLDMOPMLFPOPGHDEFAIOJPAIAJLMIPAIKHEGBFHEGKOMOKGMGPPNFLLGMPJMMHGDDJPBJMNOLJK; ASP.NET_SessionId=ngtuag543l01m4xfpwad1pur; f5avraaaaaaaaaaaaaaaa_session_=EPKMNLANHDJMCGGEDAKHGBFEGHKHNILOKDINNLLNOCIDOEJDLBGNDENKHJBFPGILCMADCBDJJCFPCIIEPOEABLOHOPEJHFGKADJNPEKNHDAFHJNHMEKPIIKABMGBCOIG; ajs_anonymous_id=%226d76ea9e-7d5e-4127-85a0-e511ad57ec8d%22; .ASPXAUTH=2A2A38541596F51F82EFEB344338FB0CA3AD9FF511B664866DAE6D906BFFE39804CEFA9BF5165131C66032EFE043357383722F43553271267F0A6FB998708EBB1C7AD134C827FA4FFBB7B31B70AC9679448CD2050740BE7D57B7228AF13323C3CD0BD187E9F6091CE825AA529415F4137568553AF8837EA1FB14FB5555312E95C6B2E7FD0648D3088184187E473625FB; f5avraaaaaaaaaaaaaaaa_session_=NCHOIFMECKECJPOMEONFJIGNDMOGBNCLEOKIDEMNNOOPMLIMLBMGADFAFGIGJNEAPCADKBLMJGKNPLFLKPKAKCKNCAIGMGHELLLOPIMMGKMDFEBGIIIILOJBFCIPANIG'
            }

            print(f"üì• Downloading PDF: {pdf_url}")
            resp = requests.get(pdf_url, stream=True, headers=headers)
            resp.raise_for_status()
            with open(filename, "wb") as f:
                for chunk in resp.iter_content(chunk_size=8192):
                    f.write(chunk)

            # Convert PDF to images
            pages = convert_from_path(filename)
            text = ""
            for page in pages:
                text += pytesseract.image_to_string(page) + "\n"

            if not text.strip():
                print("‚ö†Ô∏è No text could be extracted from PDF (OCR failed).")
                return


            sample_format = '''
                {
                    "found": true if Property Address Exist else false,
                    "address": Property Address,
                    "zip": Property Address Zip Code,
                    "state": Property Address State,
                    "city": Property Address City,
                    "instrument_id": Instrument ID of the document
                }
            '''
            prompt = f"""
    You are analyzing a foreclosure case document. Extract ONLY the property address. 
    Format it as: street number + street name + city + state + ZIP. 
    If no address is found, respond exactly with the Instrument Number of the Document. 
    Do not include any other information or commentary.

    Here is the document text:
    {text}
    
    PLEASE FOLLOW THE SAMPLE RESPONSE FORMAT IN JSON:
    {sample_format}
    
            """

            response = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=[
                    {"role": "system", "content": "You are a precise data extractor."},
                    {"role": "user", "content": prompt}
                ]
            )
            data = response.choices[0].message.content.strip()
            #print("ü§ñ Property Address:", address)
            return data

        except Exception as e:
            print(f"‚ùå Error while downloading or analyzing PDF: {str(e)}")


    def run(self):
        try:
            page = 1
            while True:
                url = "https://www.cclerk.hctx.net/applications/websearch/FRCL_R.aspx"
                payload = f"ctl00%24ScriptManager1=ctl00%24ContentPlaceHolder1%24UpdatePanelAddtoCart%7Cctl00%24ContentPlaceHolder1%24GridView1&ctl00%24ContentPlaceHolder1%24hfSearchType=0&ctl00%24ContentPlaceHolder1%24hfViewCopyOrders=False&ctl00%24ContentPlaceHolder1%24hfViewECart=False&ctl00%24ContentPlaceHolder1%24txtFileNo=&ctl00%24ContentPlaceHolder1%24rbtlDate=FileDate&ctl00%24ContentPlaceHolder1%24ddlYear=2025&ctl00%24ContentPlaceHolder1%24ddlMonth=8&__LASTFOCUS=&__EVENTTARGET=ctl00%24ContentPlaceHolder1%24GridView1&__EVENTARGUMENT=Page%24{page}&__VIEWSTATE=9q%2BLhjAQhAWjF7TQr0EjGNeiXpoHZ5RjPzngEYKl7QGMJAPYyiDzfWAtR%2FrdEZ8NN9JMU914aV2MukN58CJGAlq2xcVAKGJWvJBo2Kgg45qro6X4K7DeV2qEQERkRkK6f0VlgF74n40DbBSDPDA84AYj4zXP8KmpU88Bwx5omtpdnKVs2qGHpgKfdZm7LXNIH3E%2FXKOfr7Ouk57Qvt2K1%2Bzi%2F1pbw89Yq60mQilk%2BWyNd%2Bo0dcHVD%2FUBZH5mtz%2FBIuT7BSqrLriQ6UOUU0kG%2BLK5n8p%2BhOna6ODjJm4%2FbXXVZJCqCZoY8FTUBghEP5F3zu8BZKv3p2TiK%2FKaFCgkJPp6vDOevLJiZmnFI9gV0RweHqFQp4nhgNSL7e89eh2HsjpO9M%2BZ1eMxaxLGaVo4Ohg8UGyNzHNAZiOkjIrRsjFAAy390VXUbz8BoBlnirS7PTGNAYLcxYzK7E2a%2BTa5DjCF2Wjw3aJ4m27ZaJ0eiF69%2BWM0v%2FQ4PaK8t18LWtgbmpfpw9nUSA2FSAPD4uxxeDKZhm00bRWOWWFjMwK%2BIWb9wWv8q1LsfpGruzmplCGDKXLGG7npaArnnaagUBEP76Ijk2uLAfT1Zr73uGCjepBjhdlC6xw%2F%2F9%2FjvlA452sP%2Fu9jLhvPZXCL4wNNqG1hDuaTRa9m0KDAII45ei7nPMsA9bTO3LazW88eYcBA3m4rnqvS3CKhg51bnp3%2FoZ4%2FSRpXKQxYCytZ9KYhJaL6FqxuDHOTmaSeDi15av201E7t348kBmysqP4WNjKlgaplqJjQ0a7RSCk%2BxqH121Ts3mgBMOAupORm8heS8LiO6YJYgM4WaRhAvK3EsuBc%2Fj%2BSgv1QPag0vtGyNQo9Ds6a0tgACDGZEwWJJKlk8KTAUL2YFUmu9tOWlEK71LrekjRBHdmI6uz50n0mfVdBPhDa47wZqh%2FpCM9gban%2B%2F2sU7qYdLl8LU73rj8%2Btu85IXOUmBclhKK2a%2B8dauXPNdnFbt9q0QwggwJRcQi%2B2YlqA%2FjHBlWfhzD48I8ins2FNQtToITpLUptbUXTEDjZvtVWgvW588jf%2F%2BoRd571Emw17b1cL4Cxy06B37YQ9ql3WncQYAGD9elvrHNfQ4YwMHdSovaa9h%2BR8elbW4YxKyP3uRehw8Vy2PxcNqW4Q57C7brOSSlA7Iq0NKDpjhLqgLtgpsnFDlEIw7PLtXlYSDwUvdDpssoeOA1sNjDBq8nsVAEwaEBNdAPwg8TDscG9vfix%2B%2FW9bsmTM6mcYuhD6HV0Y2jo%2BP3LOt7Hv%2FMTJe6Xc6kFLp0DFD8zR%2BcTL47%2FjAIbIxrvZCvXm7RJpA301PyYD9JZbO409k07ycLHD%2FTWMrbhmdrmcCahurn6SLSZRng1vqGrbqZ53Yh9OuNpLNYr38VMS%2FOMpZOnuMScF1Q4gUeeC4hjV9enzOAQlzwsx82dfYi0RhOzQ0ceFQyQCE2GA%2BCZG5kaS9qd4H8UgnRFYS7izuxoV5nzdRnnKOpZC0vO9jr0Jt7RSAcNvpmezmPj09ewuj6qUsSmBLaSJEZrF5E6%2BFVHqgur9MagY8A2jxezw55Th1YXeI8y4TwfTYW8bfiRSUYMJPfGOG5WaiEWPNlby9HRcGgFWQfSUY%2FVG8pelG2ECTGaVO%2Fke%2B0akAuMDlCedTALzAaMTQTHyYUrJFJnB9OdGrm5SklFz8%2FWLy7cV7jo9u4VAZAY50Zf4k15tx%2Fp0fdwq2qL5IloVupYqJ%2B5cTI2kOf3zyOmWkblnGdxxTGF%2FxeYO6rRjjokIH%2FvtZ7PqDDC3mdssqAvnlgED%2B3wqt0aACTDdoNCeFG4WvOGMuPWB3iOshZNizIswVRBVE2lwtOnkyxwvTUkRAerH%2BHqQCbKCnoT0k%2FgIyAZBy6du%2F%2B9kr6G9PS2xc8459AK6B4bLBIYHsyzZQVV5GCH8f%2FCe6HjV8tL%2FJp5S2TdQ88HpnGrCSEVNnbnzGaLwGoJqAXQ1rrBr2bwh4HZvZ3yGOGYpzOVsAdlH4ZhQnPB1KdhkOqVJ1etaah0OPiFcmjnYSAxsLmQP3lnRREzeooQpXQKsKTuRLyyKTxaKnKxnol1ad6Bn7DykIy0X6PmQ38%2FsVhAcvTcnKueAQvkua5tEmM5GRU6gMELidpeP%2F%2BzjjVOyQjhJvPXDwApmn2HNrTAxYoxItTSWEUvBydTLij6xIN5obclvkomOxaJOMmvrjas%2BEhBO%2FxQU46mIm%2Fhy17FLhKAUgkRW%2BG5mwvlj150eL6TJOAynf78qqtR6jt6qa72YNJaEWauVBIYMzoYioBzh6gEqtTvrEGtI0Ghw62AZfXEghuhAqGKoHslIbkJMTXPj1EzZrsmSbncjrg0dDhnEdqmdvZoWbBzqvX1wJ7SFO1BlvYWt%2FmUwdYWc5N4chq%2BZsuoX5baIROlnOMPpl%2FyN56BNHMOWGfKc4rWmoxgpjNBZtvGdzkuA3yow6vjFYAr1YnCKhZ2ODHxROBrAQul1nhkOu5tXiW%2FOS22%2FGHk2%2F58VXI2iHWxofo%2Fmfac722Vq6fLpCLxUvsNoAIP0q2wuIJl5hprnf8oUlZLMt7nGyawE0H9maXFZYATNRa6ASp9exi4uBHEn0BybKkvdqKUbz5IL1Siwe44LTu0psQjzddzFh3LKAPnrVl3pi7EK%2BGuBXN13OugIsy%2F7qbAihqV5c1o8u6k8Hl6KtxT9eS3mE39FgikwHH7nkI97v001faZVwDZKocJy%2F2B9h%2FlKgg%2FupZr11VKxzM8DTnd6NvnNIX8%2BPELojl6l0nVKJiaFrr%2FkRufPKZ4jQJ89EfLuID4SBNAf86SoJHYxjvzTAsEO3%2FoV2URQ%2BJopr6V4F4tdWdxqlLRA7fbibU%2B6EkFOtYL3WD9QfaZEBlamVp6xLyKBLZQSY7dSESGpMekAUIb6zU23h9HVNY8jd5F%2FRU3rwGFyX7fwRzkOv8tmLgTXuKQv2Ie55FRN1WuHAbEBVsaCwEDcsivfPgvJROPIp5swSIrpoBST8J7HxfDMEpQKKF%2FkxjH%2BuxN2iRntAMngX3gHmfQ1o9lmj9YqglSfNP0Mz4VgEzjwDMCcQPxxEy%2FiY1jm0YqvATF5E%2FcLSjmLzylk0YtKJGb3bHwE74trFqwqtCgs%2BZjnWW3IT4fCLLTjtsLzsCmKL1n%2FNTVE0C63ZoIeorkG4iwA%2Fw%2B%2BsuB4mAryLdarBhFgaLpG8HxrpmMoGoGtFZ61zHP8evJaAvMvgOtCdh7PGD7Vem4zM%2FquLRKOP4iqgbwRuxRs%2FmoQr4B2LBiTznwY4UnKOo8%2FGphScVSKKU19%2B19HmWKVbeSHztU0fH3gRfhsk8lx4l60JMtHxM40apsCuwWTJJAc57sLEMX1UrC09Q%2BQ9Nd0rpYg3Mjsmx%2F%2FBoEIX9BftJNc5tSTsruipBncJ%2FfyOVM3PE4swCw4n%2Fip2FaGFq%2BitmqYFPFB%2Bin%2BKvWz%2FLNHfaNtRyK%2BiepJD1dTQEr2zHV4gXwwFc%2FhCumylmq%2BLvWBs4Jw8lqLrmcYKVzcUx5cYyDMAtO%2FElJJWyzXJaobgVDMmhHkENVCzV9ul2skTYY%2BVq7%2FAPbeGjoeaBlkwZ7f4sVkG7KLRZdffeyE9aP%2BFEw2dAGvxPS%2Bn%2FPm%2BBH2SEtw0Ynii%2FtYRUxjC7dqK850vW7EfEBVSnuIkRO4nhhdzTwBUxP3DOqdKPL7F%2FozRczb6YgHv3XPIpXDbQHrtS8q1t0ctzpMPEowQUZk4q8VGQawKrrCAfvJC27PGO0LUI0ToGzVVwO64%2F0s6WJn3g0zaZvOsnblh%2FaPI3iHMd63eCNjgWFyHwbvuu4v7nMuyj5w0XM6JBktwh15yw1jzw6HNKBMHn%2Bz6UCo9hApZfnxLhjvNjPGQsLn6Xy80bZpUk2mIgsLf20guxfWQFGb4EW%2BTB%2FzUwOLEDIk1hKF1LzOL9hjVAZoNLXI94WyGzy4G3mjbYjplqzhGYeuxJKEwaAaXw0ykEi40%2ByoVHyHJ40lW1h6991zLjEnfXcLJBSI0LJhSl5tgG%2Baf9EbgMMlFwkg9YtyFeWYHZy6I4nfwHwh5B2fe%2BNzmxhbDh4CnHIKKRMeafgfKk9Q8WgtC7zVugbMkYECx04qIPcKCAhovc%2FS4WP8r2uiRmo8FRtYRucw%2FhVhfzXCpGXZ40i4Mfo4syiH22DaC0oMzaYUR6mtNWkVUk12wsYbN%2Bt1ZnJbMVlbbL%2BGMHoOn4rKISr8Nfmc3pfWIKJHpQaRU9KJzbR3FzE1othOilEKqklhSxzD%2Bwt40Oq%2BAW6V%2Bcx3fYiNIaOaHdkGIv0av0swb0tBOjcKDYTWuMHfvcV%2FdNS7%2F8BS%2Fidmql6zVz0Svft9DglXc%2Fits8j8ns5cLdfnDDT5zzLbu3B%2Bp8an6JW7pMQOnE%2Bd2WtOl9%2B9MxiMmFPW22%2FWbJ9PTeTUKhoHaRuLG%2Fm%2BCQJPFfAgiq4lebyhhyjScnRCb2U%2BfLZjYo6WnORHRc9MIhNAYE4lVovmwyHK8hup7hfnFUkDVDhD41OpNtxhY8dNjrtZpDtRN7NJxrVUKv14DbUUqR%2BSgLNzy%2FcyPf92OceRTv7E8rs8Ga3y4qYIpcT%2FWXSCj%2Fag2O7YPueolugDhROLZ7EAiItRsvNdOHmpvowAM%2F4Miudza37RCLI2kgHaOL4YbNqXS7%2FZeEomy87XOQ6sLgw8n2MYVzU9GSarpiyObEVRSEBHVSmkFhSUt5k7KwWkTFHTqXGkzCfRee9Zf7pMn0oRmcKlg83mL31A0nBAGA%2F8QVi3yYEX4R3oppyreLcTGjMizxCg8a3j1QIYpmCglnAGKE8OaQ1vj7ECbLK07%2F100%2B%2F7xGHVsYF6kGb4cnKoUG9wRtEzv1IjtBRB%2Fc5FLLjCGe9QHTTscC9YmV53UtrJudyK5iAlqhqoGptgiXxBGvSEsTSvWUYHq0tO7Eqprh3wb12zepZRRiRscajkoXf%2FQ8cO6zxPo8dJgVK4DJiKy9QAK8Jsa1GFNMupYqxj180Tw7LKjAVrdya9FkiHqgdwd1wyzfW9lMZkooNXXFLVsq6TI97C0mH1uIkaxFsxxiLsYI%2Bu7uGscCFYro1haW6puY7e2U34qt6nCBUrhKBuTc8hq0yok10Gfy6iUkuUZVarSS2uh6s9fErXLoJZ08H8FNjNi1M4L0lQXor4%2FPo0CQ7lC2CTczCwKzqEBW99G4TyaNGtGP495e9BhVN7qk1ChH2xJzvdKrpe%2FefFSMHwoOcBqcP84T5uKGGiSwo8ZSMbQFe4JTxPj3npwBD1o43EY0%2FmCD5vPepl5UWYxCCpgW%2BqCZqtLpQSbTWpNjW09guqqnQl8mMQV%2BcGIT4xkypS6OCcwE9M9bqbqc3IjmCSrtsFGRzPiJpqcYlmtP3vCX2H2hoaU2rWO0vu%2BsuXQUcAzcjT19hl1r7QR7JzAgwj9syRSGgZRpWBYgCLvjXlv86aEvAY9i5FYCLEcQwzBOWCzSh2knOIcw%2Fpzetfh0uQkImT2EBuhYFLBaAnqQvsN1hmpq1mlWO%2FSNFGhOST3Df9BpHua1mWO3H7LOPSod2jOAKmiRf%2BDbgXg0jh5LRQ%2F0DZ5Xa7m3MzBe9YFEht%2BAcIvHsH%2F%2B%2FyHVt36f0Hy6M%2BfUNeqDAWiwx9keFhGwe1O%2B1uflgi5fIPYnNm%2B3YOsPyvi7lM51mTZfm7w101jrY8JYZBZ%2Bw%2B9TaVOeyICEQlJs%2FBqp1clytXqy5rTgJ9FJdvfNjzW9vIEYbY5TTIy9p08LO1MMPd%2FKgziL%2FZn6r6mCjbDpT5h157DgxP2efwqKLcqFUDy2CodIAjwehRuu30LhOWc0FiypNEn6uZiI1bki8nhiTYcuAp%2Bs9qI1dryPo%2B4KcB78wsrQPrBoEMOb7Rh47a26ASgaciyVRATSQhUKwtmgVwtQxiBQG%2B0zFMFzIg5i52%2FSxgbTDtirtD6lTA70t2l%2Ftz%2Bo4%2BwrfPOWdTM5P7a3R%2BkJXQqFZpHly2cDAnUr%2BvqQDPdrZIOwBmG%2FOC%2F7qffe14U3v7SjXwLA%2FeUssfq9GFcw0WNWZr7jkdVHVmNdSA76%2BfusXGzanQlCXtyj4trgFIWazG9it1ALgU%2F8sprvk30m51z4jv67anfKCJ1nZ730cEW9Yoxy5uJafZqRY2R1l1HaINoIOAQtjLUsDiQmQhyYdkQzvk0uvBVDWUUE7nHXPu%2B1xt%2BBHisUFfKn0ceptOeIVvRW7kFL2cx8VvF22DYdSz1kYc1HWXWx2s8ZHS9df%2B4QWLDfXLCPWUZGcJ8C0cR7q4cWnyutzq2XBEJecH5EiM8dLCKwz8ptykXCouAkAW0IhF8LAiEZvlohQv%2Fg1rMvgXffeCR2Fl3uoHD43TjYGcJIBljt8Q061rVCTKfOwf5N9v8XTqx%2BbOD2Z1zXVVdUJ8W1ReCGHhYY5KKjOvNNB0OvdCf5zAC22JjnZQNdDhk8uemVmW6UrgxCHB5121oAiwlJbK5q3vR8Dl2I7q3et6IrDuk3wBN2%2BD%2BfMsq6qWyihb%2Bk2h4DiFCqZ5Dh414FbiHBsbjGLHqe%2Fr%2FvfBa3OyJTz6QzJ5siWzKuWcmn7sOpcAB1pNC2gk5RJ%2B%2F4HQnYJPqRxLpMh8q0K5jXuJKCt%2BwnISOD1UY6%2Fs5VgV3euJEOSPOOm9DxuZWSi7CSk4wmR5gs3%2FQrkbKVAWZo57WG1kueZfMobQCssJbXGDDjxN32Asj4O%2BR%2Fg2qq2SJ4Px6rPDgXIYxV3R1%2F%2FvijQOx9rXEKosgTO6KpB59uixuoaA4kz9PHmKA6rnLwq8%2FXDNBaHm%2B60qin0TQb70STAtM6PpMR4HFxWapd%2BOfe4cBGR%2F95ED%2BIdpNZfz4veGZtpGakCf5n4oyWC05Ojw%2BWsf6K4CElt4%2BaLZp%2FgeT0YEctIZwEfaN2Grz%2FFUsoB3g8CNZI%2Bcyx8jHg41rieMvOvgF%2Fuoc1izUoQj4ukBvly8adiVPPeJCPZdbG2SSm%2F8qIGNnTYqrbdTbeZYQUVkShUYgNIYgW3FV%2FyCcXXqjNe7l2P9NWcQxB7I1RWs5gt7lvzfp957rJDt7e%2BIzTOCNnuWMOUB93udIcZv3X2hgyD7MaevchSeIV7KlEbPmtObtcQRe7ShMUz1ikPph3zpkuocYuOmDtHSxdQFS7wuzwPFEZ77DWfUwxHw8Q7xtzlGsOpmuss4HhFi%2FWgazg7xha2LwiLZrurEzDHo9xS8nKJOXTFZrdU%2B7XQxYmSANLoIIp3mzgbRKHJQQZ7oFna2I%2FwTmWpbBAw1BBfmrRZvRCapotghfZcOCyVwg9tPRpfxC1NAF9jVvqRiw6nSJ%2FATiyyiJSg8aE%2FOODq2KMCWDFRpTgl5%2Bune0xAA0xKMenNsyWN3i9H%2F7n0hwcEEZInsxdQ2dPLS4632f6HA3f5TSecmqLLE3yRAfGD8lxi7kq5PCAuIoUraQcvEJd6hKbmLxWkhyn8kV5uO44THSsgK3Wle1x1CMHnKG6Ina63V2IY04nj4M%2FYu6Z62tyUxoVmwMukknlY7m%2FNTYUwMjkpzZ1wUqR1N8f2DvYaPVLDamUBr3nz5vr%2BWRc6ulWFgRJacXA8gzd%2FVoFaMD6YzV7rQ3NPghvphfmmtTwezfEL%2BhHTD2nNOEHaVylNPqmh18gC1tELXJv13NRJ4aLB75z%2BJK7jiXt1gCyAI%2BLO4WCY4z8YBQ3NcEEpgj4mYVQeAlDpqx0J0oaZdPikKFyZy1YspFcJkXFvJtO0XodQDshvXxNo6LqNm4OA32LZ0hL1wdDOtHWtJGAgC%2FNekNTRmN3kIX%2FP2qXOqnUL9mUzBi33knLUKj3omhzsKIU4zEByT7LkPtKV%2FikVFAbFTXRjI7CXGcfbrC5R%2B0jKB6BR8PDavXsXtarypkq%2FiVXxsBx34dtrzvK%2FAty%2FVJsCeEkNm8yeyiA51de8QPI1aGYMVj8vyIubpnc0hw3tkSve0QkqnlglpkdO2vUKvdW0LIzt%2BwxHS64VUYvX1Brh0YEmNmKHsvaLfhJC5DhMmG6fnnEVaEVErLQIDNf%2B%2Fflqd2yYaSzhP5rW8xq66cg9e4rcXc%2F7gcP7b5lXqXHmp1cfj%2B9XI5l4ZSkFtF%2FKT4MVmFuYCoNJ0FI8ilJzt2K%2FWOTkw16uZykK%2BWV3cmikOvqcXniqxCA9OBrdaKq4ovXOt6ssKdnYXrFHy90jWiiQlNgDNPeq3S31Pzg0E8dH%2BK0vgVHLZ6E%2FJY4oXg6NSwOVI6xU0FhdMggLR11e%2B%2BvYlibM%2FZ2J8ohmNbHy3%2BtSyeejQTp7CDvQJwH91W4lyjfBTrkhxJt9eTB8WTZE9TAqYbgBFLH146WIP%2B7fyBYdLThWN%2Bn%2FCssPw6UJu3Snr6fwzm0ipe3XRLhZJ%2Fjf5MdQt5QZyMRbnp%2BTavGfjR5QQ6bncUN5G14mw96%2Fkx82x9HvznNPZWpbZ7RlRm4EYxQrSURJdztUGxYTOcYuoJrhIoms3FluvqymeSrbQTYIkHh2I4PxvEQzZFPB%2BgF82fn%2BYO6%2FBZJ5%2Bq68GMQZj4LAKPIr1UuLr2Hex%2FMW7EowpGG%2Fznfa4jCurNN%2FpSxJNlI0ISd%2Bxw8G%2BeSOxNRjoNvjI9WKojwFsG4qcIlJI%2BwOWENVUslwIueSl7PgKcemMQU356b5VNHWQdTy%2BvsNdGcfFsN4T%2B5M2ZsqZ08gWLgfVk%2F3e7GxGpkidpwabON6CTDhLCtBpFiDbFu3ZM%2BoxMjmchNU00WMAbPOJDhglsGFKsEhTqUVqLtLj9JZybSEtbBMjyW%2BF%2Fd%2BtKo6BG3z7NV3D5wpsxWNI8hNftX4IqTQ9auEStTyVwfHp%2FLKelEUuomDVyEGgYmB79CwembBt7LvBBLb7hD1I6pIAmuRMkMN5Axpqx1kUHaqa%2Fw7ErscOoeFyzSE0GVdoV%2Bwjg6GJ9yp1pK44S87ctJoxsmckVHuzyYFRFG7L6Q5Z3kKCjQBilQic46ukMg%2BCaO9SNV6%2F4RToSjdZ%2Fkla1riamsq2sZMTtDCVLt30fk92cQhpKI5eHuQforv7ISwBQT5%2BEzlkz0Mgi%2BjGxNCnfhl2CF4VG5%2BQHJ66IsBq3IWmJCQhkcTQb%2FUXoZicK8Gf9EhZiVK98q9AlVX%2F32l8SfA%2FyZfrOZog%2FF1G17MbQVqI6BiZN0Bisr5CEvnCFABkwOuJ2wapM7BRBXvam9xsMYc0wVxp0fWprtYvvH%2Ff%2FEOcaeX%2Fz6%2B90y%2F%2Bl9H9mz1IX93O%2BjWFL%2FXPgN1ZFnFJPAd%2Fu0YDy%2FCqxYw6e5F6s0erXiQiAd2wYs7aopSu6K%2F6lKlY2g6d47oQt90wLGMBZCB7uDuhxxfkZJq4DlTDuI6uOxFsum2JkC9IFhRboI5manGOsq3BCXgUkARQz9Q40KO01668LnikLEdcS2SgZgrKoZFF2HmOJqxdcfani4ujbAEVvLObqfpwhqNWrRky39wQO3gcFJTqdyY7bFhzVVkITFReHjpPL5b40499jVHHieRF4hc3%2FmI%2BiHz3d3ZTinmrCejqlPwK5HzggcPYqvj4Yrn4r6rsaXQ2iOmlUddfs7%2BCTSSGG2dQR9gWvSg94tno7%2BaCvJlkX5Z6okwIraCiFTXB6%2B5UkM%2BmdtCT9qy5TxCyWuUBnj2pq2nsxnGEDQoCQ6lJNKinWojkMo0t14jNe%2FdNxz1IXRRwQLJ0eoZ3osJQpLFA3qDVhLnwi6SDbKuLrsNNbzRXZ0quf0VlveevfQqfmIZnBdfpR5G5BZEjcL0JJw0MqTz6ppSbqiMq8EFwGFw05R0PJgybj7MY3HMigneNVkOM%2BB%2BHcJ2VZio44hVTLZfXcNPmqd%2F7Cu9hoiQCupEHAzoC%2BMjBdC0yEU%2BDLXLTmAowpE7JscfZZPVMf0mFYoZlALE1PBGkjKRgT1Ln5gLnUZcVmXnewQMf%2B0EfOb21fkpptH2HarOPFVkS30yOJOBwgCyPt6TLiFQ9SwHywWgdZ6jOxU1LNwqC%2BnoBYcht2cLFJOz0cdM9LFbBRUsB5Px%2F3F0em5%2BSsagjNoEfDDvejmzuiK1T8aCpFmdYBhsCwkC4d3A879QDZzyD%2Fsf8SY3EAQmqgvEYslB80Twx7MFk%2FpHlBkfWh07UeUEPj%2BYJEFA0XZj9GHcVG2R3ww1pf7JPk5d81VHwv%2FH4phEh%2BfnYd4wIqlMIvc194jMJA85vu%2BgnjIvtDUukOukfy8Wf%2BPfKBHoMQEdNGxl3mZ%2B9BXqr%2Ff3rvn450M%2BFuDRazq8KKntLYXKUOwXomBWzXq9L4%2F7IdmV20nf4p%2FpaHyPwC2YVFalF%2F1uBhEASV32%2B4PbF6MKN0bwgJcsSrwtodazkXviZimsBcZsaKk46CobsbXBHp2qkkJ8zAUw%2FgNWEJW9LxIfUHU5G22LTDcsBzH9cFr6Sv7vBVbhBPomS5Va7wVXthb3mX3h53adQ5L%2BtMIM6%2Blar5FepXK7LxDl%2FEtms8BR1GawW%2BZOUvdsO9IXgLiACHyLlmF7t2KhtfVKYS3iAFbu4fK7W80CXn4FJ7QhATpIKHyRfIGG312Hh5NVXy7J9Yr%2FCg0Ut1iPbPgGBRkr3vCQVQUlw5KGFEj1KEU54bxeayakxdrVwt%2FabxB%2F2%2BPE2l%2BG9FyOvPEhVZ3mDHl9LRxU6Vd91zvnXGoB3lNK1PWQnM2FQ42P3GyXDz%2BwC66TrxgWIufXY86kMA6kykto5z98zftSDAwdAtHIkB6mRBXV7FH%2FAfu4uuKVdCHSK5h3tamG2Kzn1vn2bnAbIYphPWHQ0GoQVKE5ObZVrled8A7eYA89b9EXreAKpG0ulU0fobMsRE%2Bmka5Kfh6HSsXR4uWERiB89C6Go%2Fhda6LI8%2BEUqtzvkSacD5jHDORXx4pqq456VC%2BYuhsp5nDFEe%2BfBNoTIY%2FA%2BorrWXYYaXsWpSdSeSPQ0F4JFzG6jqBGi1vPlHrAyyKsrrs0aeizVJXBzx%2FK%2F8iCcUvl8R4iRxtn4iDy1WD8TyVTSZeFmxBYAEZBCRN33V%2FSfIAm6bj0XXIkNG0W3siV4%2FJu8B%2BVyoPz3z6ieiVnD5znV96%2B8uWkOws3JSH7OF54ceUoKnxNVp2CK60%2BryAr90Gn37mGC7P8zcFBiNIx1xzfXus28P0Bxfb4m9G4%2BX3KbDr7XS574U427iywUoSyGdeOdUzcmPItnOBwg67QjRP2rJDXBGUTB80tFtIQaBQMkEFp2b4QIeBXxvNG06wVQIwEolYckZeQZ4EkAA8l9AkpbkWt7a4T05QFk4uV2aE5CyUvSQcrwbwoAOJ0gPghz819atHgn1CPyWJl1PbD6p38XgIRvy%2FS%2Fsj2iyfKu7vYBQslAAwmDnD3%2F4CNUWkSCyTo26v9ROK3bgCT0rZWMWC7AtJTFXFoW3CtxnxB%2BSGORsD0NGDWHnIigS87ZyKV9vFKhhiBzVC9WjcxH1Ei2Z7Xn9WXOT1PV7VzK4Qm2hrhuuc%2BlrpwgpayK1kaxDKRwO8TYMHRNVfhez448EaWYcUwFLlKGvlftR%2FIsWtovkvIm5Jma9jCDYtfWy7p3Il9puEA7r2KRRAVhamOIYYUtB6k%2BBNTUga%2FT2r1OcQi0FcPku5XVZzSzb5DY7ktX4vRi8dKpZZsy1Arv8z%2BqCpy6sinvYYTqjKTC%2BHWBXGPR6ZJ3pQoAHTFGilfQiSca4Dwx%2FlBURnArexpCvNhG6Ny9uj4d49%2FVJP2jnxlwjXgSokI541yx4dETVaXu39TGKZb%2FH%2B9%2Bc%2FwsS0fD%2F0MiRPPBCURSDyBK%2Bm3i1BysdZtWg4ZzlXhQs2DIjQ7%2FEp1J5lrri%2BMiX3htRLJ4LsjtNnwlvXrDLnJrWNeMBrDHZsppzwjWjMm8utUtr%2FkPosk%2Bns1o4w1iKWphMD%2BSDbU7c4urkVvu7dh9Wc3fbuFDkdTmF0siWuxzn32qpDtf0tZ6OF9WKswxYGzx10NeYK0IzrVGNExF%2FfE3Zeh6V%2BUEusyJn4ZIMpSJc3Dl%2BErTWBvGzr9XmM5RTxEJrQaHU%2FEecNAaZMZBhV7XCOuy6z6OIlpsL%2Bx80xuXUnX383GM7al7EapH4L6N9GNqHl%2F%2FSWbHalFmcK9FP%2Fk26OfccKYwP9kfUxu4m256g3B%2BUBIjRa4UWq0G1gCflftBX9DtoDrS3MB%2BwiVzV0UjpnkteFXBh%2BdnGE34fEP2BgNPlVlSAdxCGqrzv5EeKo3vYZsXrQuhBkqNaH7XBr%2FUnNjY7SpOJudKq9pEzLhHn3sQqmBnmth8nftT4O9KWsS8CtED%2FTAlKbqWttFKf6dtY0M4jqVcoCzM6M6Gu2RKEtuKtkCZFtm6kJB3fo8kyOjk7ISDfwFE0KflarEUPb%2B%2FBzr0PLSeToF5hIns3oOIg4y8eOjWVTOekc5sG8g3SI%2FqcmNoxQNsXZlrPS%2FcWv90kONWSe6gShGXKLSQoZlFf8xEtJql2uD4Br8VEkJMJaUraoICsy13GmHbqyn%2FP7v%2Bjz%2FqiNpu2zQZwbQ39cMPg9Y24a1DQqFEDh59%2FiR3z2g3FJckrZBPrC25J14%2F0Lj2QdSUdhMc2JZzY9HiZorxQWq%2FDKTgsDsEiS8KXzbb3Q6GZlKzzrTFo4us7LHuwahJr6TOoVtW0jEqEFPjL1SIEURqPPZ2NF042bE6xchhY0awBfpgUAekf9I7a3JrH7jcyxd12rdiCI2dimpMc%2F5VSg%2BQgAXDAKTWadazax0wvAG8MeghVVt8Y%2BkvEV5P1%2Ff6iTEEzOKUPsFca%2FoSvY1ZEvgtcyUbHEsReG%2FK3JU%2FaECBCV%2B09tIJ9HpDnCAQum3fLzl%2BHBykxhTigtQjhKCyzS6iwAluxZIao7pzlcQEJPg74751T7L%2BQ%2FIz%2BKG1e2%2BlcJQwoySXJO2D9y05JFemLiDMq4OOhp5UE4YqqTzmWm8FFCMF4FncPScG6CqdL%2F0BcIveUUWtaYnEV5pqsbHbjOp3ms0BLzEWOa0STlx0x8ZLF9G62SCm%2FRcDMHmHAzjYCdGLdes6h2qtcsV2u6HTu%2B1GhP5lejSouphRyKCe39VTW3hsBMXSPTT9soTXAE9NE0Ta63OqhZ6XeJz8TK7dN4kRBgG8T0xMYZhq%2FsFFpv2Q5SKr8TOyEQzQzeC47iDZvjKrTZjsqtcgO214V5N4FfJQoK3PAYypf6%2B3ol2MmWk7GoL8tQxY3y%2Bf%2Fnzrxv50%2BF40GIGftdGqH04aAxMomZzNklLbjFnWOT4qbE4qTrkXaZ7eMsw1JpyonCM2WT8WptLvY%2FbQl29jXeKOkLyJxdKemRrxDbsYQdbVEwxG1EoUDNcoHirBOXLexIn3dIiZGSb2boc8NS5Nrc2Lh%2F2p2sQujPO49syN48ti4o44a%2FBxgVBBPb0kNN%2FuRkTZXRNJiZOKO1ScOVhDpzrObw4rsz39of3VR0neds0mAdyEbUV1olY%2BQ8BnC7HVpBQ4emRENh5v8Bx275J64y7M1T3XpbYYEFRiYRnK4b61R4td9HCrBIWX8NG48pRxrrB1sMBx83SPJYsNx5ATFsCtvKxuR9U9lmlZ0JoFPfjD%2BQHNFMzTIYstz6QbmWmelbUaUiAWTAGTGAOcbA0rtYOHmJJoLHBxaGUKwUdtblVj8892NKN9MrOqrhTh2pRo61mcfxUJVKSp557xMMMgqfOtqhUtLoMJEPOGcLv3iGHoT3omf1RrtWgWK8BYESjLP%2FIK5CJOZDFkrGeQb8NoWCvDPjM7OLZeqpvQ28Df4G733lH6yu9rfp6qlh1rOUeqemSVp6%2BmJZjtDU6GP00XuGEJnxwFYI%2FUFhiFUyZqZ7gONHAceTNiiF30V4ukvOGnu1UFMG8KtuMl8C9Ttb8%2FfvG0E0Hj3%2BshUSrRcGvotzywuZkY9FOqKnBoEDDuctSQSWoi%2BDfkIzg2WRIITA6TRjmQszlvx7l3h5Y3RDvEA3ofOoNUXIPebz60AQay%2BNt0js5eHKjQvZKPg3PPn505B%2BhVj9qN5XLkMRsuNYY5xcpF3HLIs%2B%2B%2FWmouQoEjenQJvsvyxg5pEG0lnZMJ5JkocwvAI15fZdvMOlmXSQZKxlTTUIbs9XoBdkJKzIgA1ASNsrhHwDXtHBL0zDpuKhjp7ApLmMpMN3bgxgS1B0REUWyfDpGV9QdPlW6eikmLJrMZ3QMYe1ZXfPPjzL8gGcYWwfwtQFIX1%2B4VF%2BKmuENEALSFFs5UJjCwnpF5hX4c7ve0vGKyEJQ4kUwd58k3jJnAR9k%2BSTdYwO%2FptIeAEwXinhbUtJZaEnvkymEdhVwGoC25knTu0s7tvDmTow9E7A0USZ5So77O1nlV91jgQegwOcHo93mB4D8AA8%2BV1xKhht7EjO46IgGEnHaXT9x5czOgMO9NLuO6bq%2BptbKMrmPG2MUa2guNBlkwxEhj7AS9AWwLcdaSSjR5Z8SkkHmzGJLv6Wnp8KbtbCVcf73vdQDb0nLwh0U619wi%2FwN%2BsU5J740Wb%2FRf4Q0GQU6lBw8tF4FkXoVTsPypzV8yi%2FQGi7cJKk6rKLlrG5NQEEIhoySaCM6YXHHHeZ%2Fwsl934JMX9Zp9zQlpw7OiXlRg7cp3XEHK7ne1iCr8VpZ94kIQKu7KXqFnuwT7dclRBd5WY%2BS5R%2FjiOpC%2BW3UhdmOL12CXuR8JvjZuvU%2Bf50i1xoPk2NroITnOIqYYzVH8ZaC%2F5XM%2BjnS5KIv2O4POZ15WOjsDmRhcvYQ9UkW6HgPa6s50c2UQ3Pa%2FKpn4IMSKSWULRq0igisQbyiEDaTIciex9rJvJVcvyf%2BlSuMDyp8UxxdHopHhATNxJXzdsB%2B6cpa3qPByf2Tae3wsIScWVr9DZZOGstlBVBKMjyW8tudjK1AsDOpR81b3tnOM4pQK8QSmdwH3sAtIvjKkdtBtRdxezCEjP1OLHJuvuep8X5DNVmUFmM%2ByNqXWOPNkNqsIkWojtzqEO4B1GN7jLb4pohPaL8yv2ihJl6sEmpg6WQx8ylA31qZVAhA0oOLF26pyc0BbUOfd5iJeE5nKFjGgJvUtk3Z3Zfo%2Bvya%2F%2BKXniBM91TUqy0dARZb6ArF%2BmUWTaH2ixeNdoXeavOAIWTX3YQjq7fy1eaFRJBjo96K%2F0fVxZY2cP9oBkT%2FPB7PbIJTs38Ji9UIdTIJiRSmlJJUhvzyk%2BOByd6fdKpZPt3nBk03wle82Yal0HsT6%2FGmQ8DeHt2vN9Hb0OFTb2VUO3XNtQ88Na7QOUtn%2ByJbkb9qwkVEjai4X461Gk76Cy56HKqhvQdT7oQ0Arg%2BV1Yl%2Fn7tv56D%2Fq7J94gcatupey1wBeLA0Kqdlhzu175qqFqEdRaPO0jOS6y2Q9JrnCQyCN6%2Fbllcesj55bwPLU8tUa8Ppu%2Fo94aVTIhLHMaBSCaw4ni8kjpDkZ7MBrCpbuwqu7dkKUn0ef1cm3kX3guVRZntLKJvI1%2Bs2LDRtcUe2Zc%2BMpsqRL%2BRhjjKKai5nUIuvCsQhw7QOvztvjoR4WRBhDiA3zJeiAFRWfsnOOwuhBHAD1wV5L0km%2BX3RhdsWn5REfXkcWk%2FH5fqdGHItvXRBy3oXnSBQ3HZxC9cbTSyoxK2xPGySus83x7p4L2lfike85lkq6v%2B6ZsoQDhmNmVKX7IiBzT1HDgPslAZkRfDF%2FVEAO5f5DyeKgGBdJeaoNnM679aA89vca9CmVixYy7BYeGRmBWmWx8R8k7imi5rj86Qwz%2FywQcEm3boKEOTanY5czB8RnKscg9aT%2FLnXY%2BjDRXRlUnF20i4JeZKYeHBjeNQqWUhSjkKBAKPhzm6R8PommwhHvxEqHongXB8bVoZxUTsGgTITEwjcSM4fjhR6zl9lDCDWoQ9dZ9%2FzIQCrEzXQGvlq7WDMRa2Vk4T8KXi7CvQS4GJr2%2FrBNrS89gLooRY5AQfkPzpUsmWHMOYQedAcMVXZ28JYL%2FFJUMLC9JgzY4zE5ItVvw4P4akDIK0MJ60EXXip0djFaeyjDd2dCd5jdihJe7yTyc%2FIeLbcdGQQUEb2I73DN%2FV8PzXtS9KnDD7eZn%2FBA1%2F%2BAPQb1T4%2BT2KMEP6pu9cyC8dwLTfcnXLj5sdDkN8oJaqcnMeWtX7EKENz98JrrpgHCsHANjmjOkK3pafDZCQxF%2BMy7arxE7ee4c%2Fj42WzDeIAIhfS%2FiQNNr5Q%2Fm41L%2FzOuEyXhTqsaq2XW9IAOwF50ghbU9FR2eiBXRHu%2BtQ%2BMgO8cea6iUkkJhavVVCrS4csBHfG6htRPYFC3G4ioDMl0kbuJR03JHlDws4tNOI8y8BPHJb85QQElwRBSm7v4N0dfJOHEWJMHYsCEOqd0Hj3RmTvWHwvca4tG7MsJzdXDxOCeOm3OL3%2F47hAZV0In4B60jCAPwgunZY%2BjdOrvhU7ZpqS2jGkStWgB29mwSyniDHCVBdfLg9NvQY%2BGhaQa6F%2FUWJYdviswJTSFz5OO3Xui3aGdxbWZR2grU9%2F5i8DkSeq2XFiNV46RhnJMXibw9gM1XRf4MiUCRUte6Fev38zE9BI3yPCVbw4yTzfUhlwMeMqxiLAsqb5TqKpWYO68EeoMUU4nn94LCEM1mtfZK88J%2Bv0ItBOCnbiT%2Fe7Qp12vN7V6B9vEgh4ohPygGNX8vJrNKiQOxkpa%2Fe1hxnZzHvgSTcI6G%2B6Ke1eg%2BlOggGlp%2F2H2ZhDZeVzKq%2FUCWbHdxv20gfAtPzjWX6hxoaCmlJM0U%2BZ4V51U6WNdP%2FeNJtQ1wx3M2BLdIfMcs65lfV0azYEHv7BckZj%2Bc%2BNV3oj3tSS10Urpci4mn1%2F87OFOcpz8hr8g%2B6E9NP52XSkZhC3BjvHsKHPdAgFA2A0fEdkq%2BxVfFFG%2BkG%2FBJV7owiAe8mMIp%2B%2BQKarMmtWfUz4hJ61s9wLXQ5FwLafDqij4BtzWG4Rl%2Bht0lvcziRf55W8n7Kg7fMz6MhIyXQY3Kcyojq8jIbb3JolKpsHDuEmBZEVzzPhRCpuj6XX9qnw4kHVA%2F6gP2hizk3FMjwo3dEhnt1waXWfwHMVIY%2FZXSsNW%2FCgQVMh3zsdKsjeMrLbY%2FpdnMYWNKUcwV9LL5T%2FytZJ%2BublEWEnRQUB7QqtEtU2%2FMG3ObnyoEtmqBDfBhOLkb9SUYV5zXnJjqwv9DzLNknF5hVDfIe7CEYduUf9dfYKvGv3bwJp97tpprzfzBuUg0YuJ2uwmTgqkWMxRSTB8C9MVUGCb5WrI3sbySW%2F3VTa7M6uFbjTr2WW5opt%2FDxPg5bk00whu%2FAlLJsZXe2s%2Bh%2BtYD5DXagkk%2B1S8VKXohPuasd4PJyWbZbzNHF5bxQzBCsSP2wvBYgaycJjixC2J3XC1NNfRkC11QO7pPgqn%2F%2FwrxDzqTr1yIdJYwQzFhQF8nY7mEQkX5DvcT0nYg4Mn5Ld4UXlNoPuu%2F2Bb9C2yYQekKy39ltUsLVIHGr3YdWsPT5aYA6y6FwHzU5pVd6UzHEfNSbC4aEida0Pd6nuL9kYjKrawWjQz6%2FpfIAUgvBgmVFCeuP5l4IvM2GRTyKLCHruSfsF4PMRJ0H1%2F1DNnCB1r0kLUgLbPCaYnB2G7Z1mqMCK367wNdrcL9gw4zuYMsblos2%2FN3lfpxp4JHl46E16g7hUgSlGEH%2B0xJ2F8hDrL0D84HP3CZVqozPUkJFKmT5j6LTWW61GDa8n7N16o6kst9d6JJSBtJUHWtb5lC4JRGAzaRXn9hugl57RHXPAP2O6vWCj%2BNQwZMtOoPV1BHtMMHLE3LgV1wdfJOpvMDB9Q%2BFLBdYYUwCsFSL2%2BIoEKKW2%2FJmlSdInHC7JcC7iI2emveu8SvfwNF%2FXF%2FhZSg07UXM4UdJCDu40hJTIoy%2FX3qiHwTwF1R%2BgfiVQPB0ikLKAf03LNYYEslCW4hBk%2FrOi8RoRaDz72ieBwIotuOsZ%2FIqH0pgIouEeZPPzh3%2F07y2E%2FVoMCR%2BQBhuJIbZULFMzLLYRNlRvrdZJjpOn5hXqEppqmJJhWNzKl2aEdrpbP9Qi1mkpnqy6lssD1nbN%2B09PjFSQNc8r%2F90yEtmBZwigV0tQ%2FYLcRKGJd4D8f%2Bh%2BSV%2FqvJ6jDWGgX6xUS6wfgrx%2BIEw1pYZALKdcDxP8nd%2BfOY1Pfv3dUgRKCnfw8rlnGPu73saRlKkIgzm0l%2Bm6VMX4jbioOAgKKOvNayKK8QdcmSLNA20NhFvUTAohbvubhvOijlyH0eSMorb7M8CRGyoCqgfc%2B61RZKH%2FZXUFvj%2FcUZrQrUxhNQ9FzHdojSu3ijb%2BBQ1jb3BbWtojtKFX9osVth7QmhVhT2pRrSB7phMvweCxeP5hAhxNOBaaStwZ2%2BOHBf%2FtZngvHEcUf0W9zWfSsb72Dx%2B9Oo7zXspHkh5XjHv1WFUjO0BZQ98BnXTTFemzw1TuTNxTTN2mGUkkGiAmhtf4xOornpWykAgTV%2FjiP6FMNf4A118vO%2BZdOpRA4GY9ISURG2qpYB87tfJDbtPM4GKZtyUQ0l9yT9FR8aXvjGAfhxTk76T4kigE383vwLvbyqsSsKd3cYxYczSXZKLhV1v33GFrDzlJXvXK0OTaY2%2Fa5KnB4%2F6CrcGbi3%2FZtLW9f%2FsABqKO%2BVY9qBAe%2B7G%2Fbq1rYX%2BNFjL7zeXQ7c2XSNenu4DG6w0g12IftEU5x%2F6y77%2BjM5zPYVHuomM%2FnkBdXLkJ%2FNYFVkfOoNL8d8oj%2Fn%2FP3bkkHZamuKrWbq0hKOX7VoLM4w1prt1%2FugTXs0uLqqUhM%2F54lQDPE24ot2awdJ1lwr8TkjPulRBTi88SOI9c2z8J%2BQMfUBAgJVGJ7058zFTxrNyHNmataN4%2Bzxi9UTQX1cTHRzda%2BDoydsK0LMN6MGJfLAsUpU69G9xfx%2FtS4nFB6q%2Bi4ALw%2BKBH6Js27mAozEMPNhnpkWWoNwCDqTAu8TLklmoNCNC%2BnBB4n4pTB2VJsXwXjff2LOwz4bnzCncT377k6a0shgq0KJTwETAu%2FulSI8LxkaGtN5uyL8%2FZ%2FWbOpvc9Ke4Xbi%2F7cZgVX3BYhDYHUPbiabIZalPCUAmZ1sX1F2Pe18%2Ffwjsq8BNojF21TYiBjLB4cRLLNCsXNpjefpb%2FdV6uLUcXxuDUbofMKut%2FZaOATdQ5CVwy996%2F0uFWs8GI2HwbguZjPKV1hW3mRqpnV2MsWnxTqbo0Gjgp7u2QUR4Lw9u8lFe8oUuXZz6SZlv1r71uvMA9fNmU0gyxgV7iruq3tHO%2FrAeK6L6i3kpgiKdmvK5RWriklVit7ZltlsISsUrTXqL2NDz9IPVtlERheSjX0uwFcqy%2FrWoIL64w5cXdTRAywIkC%2FlxDAz73iDjxMF5qMFQfiNiSxrrmOo%2BAvuBjLKWYdCdBpPo0BHD11PuhhEbtF36ceDrCCVtQuci%2BcaPbwJEffZ8yOpIhCDVdToOdXhakckIOfmmE4drgx9SEusCF76RXdU9Tot%2F%2B9gioUre2fhzQrDFYtVZ4fAZeTaKd4vcQyqR1hDxUmJFxlUGqi5b0rqdAQL6wQA41r%2Bn0XwGqwZhZoa6WFNbwy5okTkw2zVKNf2xCG%2FVjsBZ%2Bq3hPI5bUSY%2FAikk3aZiiSCt2eq28bFeKROj8r4lTb2PRkZ20RNge290eTGFhaBFesMD0mzM2wMLAVyDIwSkTFGXQeccLcdgAMqV2sQS7UDeLssavnbbXidLpDhVXI3soiZXeuagPToHMTiJsRTjUxtMBIbygbfoIe%2FNP1IzqCWaQaAdkUdSqap9Dvm7Ylb1ZMdnsAPhgl3jXvCIwbsnam3zBp10a6T61SdfiuGJtihgDGEEvHbNt6vqEfKBEdrzRqqHJNiSFQXHO%2FNLD58FHcDo2xbSuoUuAvT5JytoQlvi0egDyuFF4SSw9VyNLsk6PQJZinAHpc4OE0LcMOw3II%2Ff%2BPaXTyHEACLK9WkRKz66kZXFZJy%2B4Sz2xjfX04tjyFXFlJIybXb0qFFd%2BhSDhzUS7I1MkXshut0siPiI35FiCZZ%2BIFAbiNmtIudP36sKp%2BagVClzG1HzBEw9RkLlnGZrzJQYlFar8bBzgWpQjjXq76XqINBfp9kRYNaACE8IND8Mr3HBFPVKo57%2Fd5yrrnaqlxTdu1swo%2Fiq%2BeNODMcVCALBenYJe3Kc%2FmfwkyEkePiPSrMAK39wCuTA64sn0pB5pe1A9EkDpg5JGYsUSbWgAUdouP2teqbascpcxD9yCMJNa2pq7DZ2c0f746n3LLfnVgP5xRL6DHUOYCoeHsRFrrcb8PDa1Jlf5FpHsqDKLG7dUWc%2FLBC%2BpIczmRq07cuyxO%2BlmiLvBIuE02bVBLDKqDs7bRMYufwvWEZOC9QgXWFYQTAHjH00jhGXWZQpDzl1K3KKu%2BlMjocjXH5CROl8gpqgFxSoDJFQtt7YD1q2gK4s0k8hB2F8dxrSvR2J57LfInLgj2PvFZ7xPKf1hWdmOa4hCXx%2BOZmq8Vp9qddiM9vTsMi9vXuBR%2FWSfSA3eX1tSf666hrDLKMQ2ElM7ybgYVTVFPD4jlCcGJbh0nNZUqoQewL7N%2Fi1HM6DSs6B%2BE8bjtzdI0izLuuJwKFtO6dYKzU0jIMYBHpOykbksbgVlcLaBgZw%2FWNY0GU6sBOAIcO9bxsVBsgfZTFFQh2%2FINx8Q6MouVWnKYP%2FEJFExgxZZJiNUJSE1a6GXT504tgWF9ckAZaGhnl5Nn%2B7BUJrCiuXDtquIIUv%2BbcnahWf9ChHxQ0w0YodoNlpcIMT0xE8qTyc6qApa0Exh7Oq64xVBPVDAGif5F5ANP9j4rqdpU1QeGiN2hSxNfqQdS4lyNK1Zd3Luho7P6yJ%2FbbFA4vkCbrwIEkhLmfe62VmclVjY%2FzqD2KG4GPSFH4R7AJqY0oIjeQTycSPb2mDBLTrxsJwcwS%2FpmDbbVoqIuntfSO0TyyiUaGIvJz%2FlbuoFBm6iytJLZuxP%2F%2FPQMsBQK%2BbT6yftfbvwEqWl8U1yxRH9413ecv4DBKNuF37AHucuArUvGVqkaKfi1El2rMOblL1CrrkMg3kGu1FXxAwa%2Fvm0TuGFu19bNFIBwz3F4fDeR6cMVIbxkW1trH0KKB2PGclUmWxCUbsfuWGWz5%2BKGrZoPJ8kzsxrzHnVag66Kkqlxn%2BQ53UaZ67Gg8YdNyIRCAFxwKZivrw6fYtKscv8tnLJXR0IOyTOPtFRhUj89sVsVGm6bQXW86ER%2BJj3xAn61ygT24PBoHNcY7KTVAoNkmJr870quCiVcZMWubWDMaeygU2ApjUlp4NqCkNeCnx0Mt2IIn5qSo5WWZqWQn88AkvntTLbPP%2FhTZgqHt0dHlNSH4mcLnDK2lyVqmO4Y5nUaqFt%2FnOpnlgqXCQvX73o0cejWCqSU5jziNmbJIAt3kQLhnUq8fTc2sydGr7Sz2wdZ%2FheXCaFXlgVnvALqYkxDwhPvjTFL49qrwMHvVi3fKoDivNO9ZSGy72kvTHplP9o0M7B1dkznfcktW0TGGM%2BG3YmE8vmMuiuVlFYHCqt0C1w0kNsj%2FEGlRYBwo1mSBjrDWL%2BacAeESDhQFhquezK%2B%2BDP61i5%2BzmYVyfzViy5hZQqrTdFG%2BUbV7y01l5eoBR%2BHnKiQu1T80ZsyUBtmzgJ8kofph7rA%2B59NpYAE%2BBeURZ3s5d4gNksutZ0IhdRBb4%2BM9tyDOxjAkldautPgtjBARO6IyrCD0AHZuT13BWNjWU6sDsRpHKrojMCIqoErS539UHS5dRLtyzYZwN3AAMLmCISXzLV%2BXWrybyTjckakcJBpXBzc4qSFZ9gffUvCK%2FqZlaeOBSUV1fZ2xCJEtqgCGahBo0abCMucwlRvBdwJHGycFoiDwBMiYlMJBV3MOYh%2FA%2F33Y1xEpATv9Qb3JgOmExwgXyZILFyQmDKcYo1cAbLQqLxmipbGQrGvR2jtBHLUsWNb0GBWN91hzly9Q57FKsltMRbDWGnHlJQxAl2CJIXc27OKBagi0GkQ8MMUi7HwbHuDPpLp%2FNwr%2FwULIJypI%2Fzz5UuIt2xFWgfnF%2FMFxFRA3DroOb9ZsMDJKH%2BcDsIMx4z%2FawONtpH%2FKhS1B6r3%2BWQrlkc2PJKC9j7Kd6yTOg%2FYYCvR4xN1ZI9PuQOpsyQerQdDc3iGQel3bzbutQY8c4XLSE96I1sIAU1d3TTLJy%2BceeJgwXmL7BxITONSoTzJpcZcktV2xh67LgAu5qFmrYOlNwUmaFmxM%2BYYdRN22rQZ9ePea7kY%2B3SYNaPsquIupqFUSWeO3NPHTK3XuuyNvzpdGTYcoPUnr5MhE6T4Egi%2BvBt3BtUspSHKCIw5VXnEwkDsbQ9nmODXgzmQ2IBvO4HCFA1YyNgIscg7z1LMFLg1F0bieAUQbobU3ogR1Yk6cG0XKHsRqxBKYpuAq0jNyXA5e1vQE4v2ps7vePLpQAtkaeaF%2F0tTRZYmGtQOLZsVc5MFGvyc%2Fn0MITPn%2FMXlcegrm1i2FCRrV7pEzLx%2FrOXR0tT7Ps9yJuumtH6B6ORGdOg7NMWCwb66bi%2B%2BN8F19pJFfT%2BGRJoAAAX1IzheJEgRBjhowSLB4eBlk9RYV5x8HOhJOdd3k%2F3Kkg4oINqBUv7in2votFpNZrWJBoW2C%2B3eLtTfLiXjscFmL29KarsNDwdnpxPG2If5%2FZ5P7YxUEZ8Qo8kcdh8VyhszPWf63JzVw5e8gXXXeLmlTUYKXWzUgdrzTNhZozLvzTy3ib9jZ8dNq8UY%2BgMo07%2FXU3ci8nWQShMI6VtO1dikfYLcIzgEJs27SHXn%2FrAt1HC2INIGeuIEfvcJSDA510UT%2FNER2hjPoPKgioFdjjJwLaFWfggnJrQrpt%2BBeWpH88jSunIoKps%2BebytysWw9itJIfRNgUw4%2FYNo5tYTlaezWnemEAXqheS2YhyKe0WbBkhPaEHXDffEzhG4jIcqsYQ2qY%2BboeeimgQ0INtEvB6w%2BHi1sRwi4n70DiF66LvFp3QujQQDHaBmkeeHmlHfBptMs%2FqDhcVDx8AGOP9UySBNtFVyC%2FpVIJzRn6ccY3yVyZnD8spC6Xjy%2F1Vy4c6fMGiLdU07%2ByZs85vEXTuPf%2FmJ2frCnVkxcLy4XA9bZvcUNs6buekzkQVizHKVvIQfxZP6hkf4TUtP0otwXyVyLkzXrVxgJwxF%2F2VurRvMRyJW7TgBipy3rZqx%2BEUAUVGojgQQonsAThxR5TXYue3J4nKk4AQV3X3wtMhsv1%2FZobF0TpIZC0pn3NOXCNSpOKvidc2ZO%2BU6geldTixr9n%2FC8d8bPcuGkDg8mkmhxwHSsVADpNCB3DerPhM%2BBFFHYLW9YdvR9WWI9azfXpQp0mfATa1jToQskViKRXaKIx8Ny59qkGwgdGLXw7Hs%2FY8Cd2nnLWl9supIdQZyw4p%2F5hhm8J1vlDH1ccI0Ewkbqip0xDtSyWB4nini32siXiJpkqX9ITbwLh%2FpFgS6DrUn4N8GMYA2YN0nCH5d35ltuFiRdLtxCJol32e2%2FdW%2Fd7ue6c31ECXCmu28%2BW2Zib2b23wIPOM785ksB8LSOGP4cp4py7gawpzCDR0CaLealhScFI0nzZQ2NvrEh%2BT%2BSIc0nraN7xWtcmLwV4KVkRceCw5pWP0jMWPspTgRQBvSZMdW92NC6hvLpu8tyiMAK5bbtuc54tCsZK21cKINNkkz%2BxQ4PjVO7WGX7SWqPkDDmpG0Kmdi%2FfMs28TiqWJCSadJI%2FI6SSzMrbnKGYe2b4GUVhtC%2B27XYf8dUdSzsuM5r2ZvwLQcFaJDiEUkzz2KXiQbe8UnecDlk32VQZ6kDxFUjLcg9ByhDvEG2%2Fpo%2B4GLBB3JgbglGVsnN6ViQwBPqGNnNAZaLR%2FCjl6SpldcdAp2tnfAmqkt9k1Rhtk4PnLxSccbowbvsImx%2FAl0wd5%2FLBTfa7Al4jh9D%2FiiAWKzeODR7Seqn8lWVQInonMbukMd3q4xqaAmLqUa%2BB3SPqlLnfkP78yG6BIS3Pn70%2FO9TUdFCq%2B04QZ241rDUaj%2F%2Bf38gnsFIxeF5l22Seosf6DVYHxU5IOmE7hfBRzI8fZVmMLBWq8IUV6uW2ORPrmS4l%2FkDTV7B9x%2BBllE2KJSB20bRj3uorkNH%2FKa6UDpMjjO8vmzFlwHOzsUTul2cugHqfKAlANazPZLT%2FifwpttgLfVqoFfQ8Q9fuj9%2FRsWca%2FMwUByjuzjG3KaF%2FyJfMdNTR1oDM%2BejlXLGs%2Fo9xky0o5Jf3TfZb68jhQKf8RJrBGzSSsG%2FUqW%2BpvCNdSFnL6kNbjrbnRcdldBdE8FwxlRHtzWHeUeCnVVTtKWWsm9zaHgyf9kdqgv62U4mxmabwHMB7Z14R%2BbvAVAbqYrROWuLIwMMcM%2F0dsx%2Flzs7wcfjOmAZLsbtA676Hnh%2Fn%2FCMHAtFSWCJ7RfodOsNlNfG3ZoYtvhIhsPCa07l7%2Fj3beD1inTYtBy5cGeq%2BmBWi44w97Kg%2Bgwy89rlAG1YqiXRugsEqkHdei7p1%2BsPemXIDFaa5ZvrZwlgIe8Sj7GRpH%2Fti%2F6TW%2FQooDEzjVccWa69%2FrdABz6BxkoB8RK3xpchrFbSMR%2FynfHppI9UXEa3CbTdH6VeY059qGwq5ma6B2tPMiU84Ah7H7gTsvHqOpcfxqfsCix0ZLzY7PWZAQryj4jbT2BU0sqZEZ3h2AthcTGkjfc6xsCxmU7Xxh5kNqK9M%2FAJU1rU1TKBCc0D3hrnMU7yEkA%2B1LmhFCqWmRVG4WaZdzIgAcJc7Pi03zX6FES1ePDkfRA4lKzp5njIfypRi7g0NdOeZyFsLMU4jhhypW1kBLn1dtnjgt9%2FainpQZReCyATZzA%2Bga3z4l7ddCkp4GfhrG3C3wu7O2XVKGkyMGt3VFki0sSAJLA%2Bj6t9T2uxIaevjl2t3WQeIGYhu2FWr2HOzpGyXCxttmI5cIrYM7YocWmXcgY%2BdHepob5Evj1TkCzY%2FhdV%2BvFwqbnDrD3M6FDRVT6IqigC2xVPK39pYlrbwbP7MfRpGUKouklP931xFq6V2dCI%2FVA%2BYlQu7JGaxjpfBPVPYmaoIKkpn5XoaFHuRpaPWpGnJv%2FMtYfVqWnbO9P9zMd6hXhNnysvgwPJJ8o%2FZ%2FmjSkjjoSi6BAE6oBhqzNQXR%2BW0%2BvgsJytmJMnw10Qw7FSc87fDBwrPLaW1uamE9FA%2BuzMelifs2iRiFz2PD5h2Vv8JrMCS4uiUAMAuNySWCoIDirn8Z7wywsu2lNB2PScw4dAOVthkmIYVfdTg4mJm0svRR6LtDBmCDvR7ezchaZWqAU8Udsv1mAg%2FFf%2B6ha1ynk7abpfGRPfmAxEZtBoimxOapH5lc2Z0fhCQDABSMcKCrxxTYiSIVTobLnUXQkOTiPvfTt8qvAZ62gq4SN%2BfCHYsZiX675UrfFwYkpH5mEJq4Mh4yknOTJnrZUwM4Dp79lhHoEOLUngLryWuWSTFAgftCdUHhrlS0D%2FFkdV2VefyQ242eIcbUPgyde6zccGDFnLXaalFLJM6Iq0qvv%2B5dWlSdnwh%2Bi%2FGcRs6NI1ZfmsEQRIvRPCZUxotq71Rw5YTmlK6LU8kHbaSw6pkjARlXbupcQNPjxi0dB3Gi8cnC20Nitm7AM49dJGTkrSLhRBysf7n6JmYEOIqsEwmmYrGRTPs%2FCZTBSdfPociS1sthIx1fhtPJ1FLjak2TQ13RFL0L60w9XrujsZYhgGo4uPJ3MuEi1k0Fg47RxYTVb%2BRLgoVY65%2FNvieFMtelDoBNkklfQFC9Um971WzTin6zlmKLdWM4cbt3iIBBzOIA412696MTOz40PYlmqhQ5h6NmuKZrZYlDpRRG9nCZigCzt2g8Sl8TmY4uuvOe6glwR%2Fe%2Fq62TmQNL412UnYgoVGRbFrHMSVum65FeEfiHQc7LESdd4bHzK56Px8wgGl9uXqA49S%2BzfijNCzj4AC1twmDSmCKAymX%2BS4d19dS79Ly7at7dYgnZGkyP4JTd3vn%2FTS4WRH9MHR%2BQgbosPKnGaZqGVBVayzAhpdgKzhoElNNy0CEk9sPUAzcTiCQWWBiv9JarPpMLmVOrB%2F21gVXZeiA6uJxni9El369vwSHDq8q4I8VCEMUavf6Y%2FcbGVuccyt3bzArJ3U7U9oM6wvxALVP9Gub3Niwv%2Bh9RXrtwQaSGbwuVv7jHluSoDoyJaGAMT99o82VkweTHzQWdWmHk3qhthxp%2FfNxIgpKPr%2BHE8%2FLweatenyEG2bkqOy8AFOuYPrqwuxt%2F47kEDYm9XUN6KzxNM3SOnVgfRd0mBu8%2FhSi5gWc0cI9PyHdHhCEUX2%2FRtysfPyVu9MBE6ci123RnCVQN%2B1qS8NwPcLCEnyXoSNwo5QbutfpxxPhysQfhqp7i84ZAG8gfSvwZ12037FD7zCeQ37ozZrZGBnJeSYvdamYN%2FWSr6BvmIGvKh9PLSNWZYDto9dnhBgEpjQnkhyMZkJG7HI%2FOOMc3wh7byVcxenGnO8%2BuzuCebV4OwpA09dEeu0VF2hJeDh%2FY5unRXNvJtFzWZ6Q5UbjJT8OBJTTL7mw7oGNr7Vmu08GPTM8vC2Yfs3sT13G4fVP%2BYACYGdDQ4gamuT1WFJ44%2BjCYH9A84MZCnqq8zZE%2BSgSYVDeJmsaHY1fiZmL%2F9vqjSymwIc3Cvaz5tln61MFiCFjwNaVt2sKGq9hmWlUqpijbBItHOBulF7c9MCKsH5%2B4iBq8NIsBqPpBhiyEN6YW3FTJYWFqKf8USpRK8QQb7NMNmeWQ8aIGogVValzgwYj5qaj7P2D9NspLr5hauiDPtdMywdeSVPgJahcdHkvsFYYh%2BUFtXJi%2BFsy5duaVYsKdirHBaBYvT9xFqZsSEy9mguBt7pRWprpzM8LzTOtJxQzNvG%2BUXxWDeEZhqSAsiKx26nf1dsb1P%2BSvXIKmWHtmvhuJ0jCzuEtr4Jk6Tp%2FzksOg%2BVwIdfUDT%2F7OJJT1HmbhilnlviOyguSERDAVD1SGRiT8QxzMFJi218LqvZrKm8t1ahxqlkWPRRxAsJhzILqQYkbspPfHo0EzlGnKwkcq8hczE7wKtmNB7EXeJYL1NLnwhoyW9fW%2FNYjCKe42y8ecw8pVN%2FY8a77Dakp%2FVGZ9qRf%2FTdyhUnLgjKfsfE%2BWt0iKQRTLQX1S3FU%2FN8QdNeuz%2Fi%2FX0vKLKGjQiOrcs%2Br%2FZuQIUQ8nVo3yoPYkj6Th1ShZxHWJ6N%2B4QO4AuPqkmb2GGmutm9vUxsAD5XnVT71a0sAH%2FmLOBp9qsZt5EtQRneU1ZWSCoAEezoUPlpahJ1cYR1XrZQHH9EmlS5Xb5vCBZrMsdXFsdiMQuIPPst3d%2B7eEwTk8B7J5Otd7iXyzCcDmCaCMIgb%2FI2On%2BIx20%2BE0aBjAPrKYs9INoRuwyAXVI6R%2BH5jlKVBynRq0YSQFv3ugC%2B4ofMMuvnhd6hYAPdWld1UKMc3U5gEIefmAdDuz22nKVv0rFFcAu%2FIngDmG4wuC0slB0SWPb559bjHnhl3hMh6Ayv5scoNahBTjMpAyHrA1KVDDUaO3RjhG5Xx320GwSNhXjum26RfnCxBfVJUllIF74SrALhGUbksp9R%2B34Rprme85vqdMrcphggevkuwWA5mmVZFkUSaYEE8LN8cpsFsCdjVYTDMKxA8qmdHDWFeJieb8SwI2%2BK2%2F8cXel5dCqHSLWOvEAVZtAjjiHd%2FBWF%2BR8InE1VDWp1Lf6j8%2FpcsS2t2B5KagDuISR3qTTETeYaDjYKEhkyccWzfJ%2F8bsUDSW9PDIRE80LfMRY3%2BaTJQNMVHlQ5rEhpp6tscSddD7%2BDLpKD4xGcYirwV%2F9I8nf0oHzQlefnZsMcKX3eIG%2FBQMDxj%2BjAQNhFbW7QygOWBdmUMAZ%2F1UuvscHbdSrVWjeygTmYKkU304V%2FdQsArhzRnsiVz2lDr964Rg%2BDhCKAjKHPNQFFAshOSfBPRFMRC5sE1Ctojz8kBR3nGAM%2BkR4wkX6ApfBwChktZXfZ5kdAhWxT%2FjkzF2Q7fjhXiIlEDIAJArr%2FtgDa9G%2BwrEKrE%2FLivgAUAUDJYGR%2FAWwoWMf%2BiR9kjK8fx3G9L%2FWUJN%2F3oj8gYsxNOLMCUFXNzYVBO%2FCnZuvwqEsE6Dt0izlbnyTG1lvG63xCMzT%2Fjetbr6D4mz3bvgFEQqFBtdrYLSEDL8AH10tb9WgIIKBRJ2Oud6gAXkO6X6aNDAzftYWmUWdhmjzzj%2BXsTiy%2BWTukqP35yNXxGfllbF4%2BpdQHXOK9vZbN3SMSu1J1RZh3EeR7klLkRYeYllIAmqjgkz2XvaRMK9xM%2Bq41IUZD8TK6zpxMETJKYEIFX%2F%2FrOil2BEHHQKUHmJ791rjQQGzXhxc4LV%2BlQXJ5OHxJRkrpgAPV3dVBN0htuV5l2M464RVZu0%2Fvk5ShIuoDixH%2BSXx0l9zvX4F38RpvYRydI1P412OR2wuBP75vBksmcNukWWHCrLKxG9729hJvMIRGG81%2BSdAPYftCUYxrBLLymu9hM0tLVVbZpszN3nd9g1pAE0v0dsz9VymnkQNDYvKh99yFoUOgaX0uwTJQRhDG0UCBbLjABkCG6pOmGXrLR31pQqx9N%2BMpdWSZAcFqfC7A%2BI3T0MkjTOea0DKjBOVc9QjOdC8tW%2BsZntJWGeiVgwDcduhHdobPchVD%2FihjHImCLofXHIieM5CpQtyibjGqZfza2uLKynunwAcTTZfD0PbilJIykjiEUf3bBvSHCuS1UzDm7D6MNm6P7%2BpflCbvnGIw7ECAGTACmDmrsb5IpUkltFLdQyzF9HPjRAD7OKSF88GqiJnktis9UiAxgQlQZA55hfmkdqscPfA50AgEnqcobItOAXI5pI7cBskBygONbcjLGE%2Bqjh4477g89T%2FJ8w9xlq3Q1o%2FuqNdBcDi2jzh1fv0Zgjz9GKjUipwv41MlhXnTTgp3hLGOCFhVHQsjLO1ketJEIW4drT4aC7irEhkjzbNTR%2BfahTqSR4YiIkRXhvyVV8ab%2BDlVwcQaq5MVQUlNNK8b8RHEf4rptD4cDVng0If79W1CRVPuaiu1LQLjPYFExKEDVmQfUaFLNBSUf4KEtF0%2B1NbdTGMHLJ%2BOg%2FC7istou%2FbNSn6Q%2BuaYY3Lnlv0VFFrG1n5gMNjLlMVusoZr1NGghW9njjGKzckOEzvVRx5tyFepz%2FlfuvNFt8WM7paIKifbRIs3ZymfJtmlcDoSw%2FjOzhihbdHGgeTLegbQqiUJIb6VtkmOSnOVK10HGt5CZ9UP1Ac%2F6jaZbbpMSOtL65C%2Bo502Az7y4aofsCDYkhjc97d4%2Bvkwtf%2F4eM38ahvWYWPFN1v7jsfooFwj8DYHBDUiE9HEdSL7z3QPPv7ZpaalXA2D7ow5txinP5yR0AUbLPvVTJDzkZ1NQRNJXctHDWx11B7IYhfbOsdU9ekgFgomxkExavuMEGtD6q0ae4y17tcTBijkfKHjTdeveIHzVmAi5H5pjPVKSb0UYTwla4gV1kaE0nYebxXkXBfHI8r%2Fd79WycHL7oR92ZIM6Ot57e5oQX6X%2BATxDhtzFSVOrR7g%2B5JA3Ix3ZEkaIefsHdhbb%2FQucYSwn6KtS5fESi31SP9vwj9I9W3EEQchpWFkrCaXD6xo11Bz4dTusPRBJbHd6B4pE8J%2F02iBWbX7DNqdlz2c%2B7%2B3nuH2hGCDZY7jrK866jBGY77xPoFQhOeVqGVNqWu5%2FIIj09ss51vbK6iq8x3GkzMYdPkeS%2FZXRMgS6fUJZNsOFh4SLiBIqzZ2B8%2F%2B4v0F3U59TQb%2Fu7EU8H6r0A8aRIxfgXau9K%2BYr5Pre3sD324mbsnwjL9F6kBla80N%2FJsC%2BTE1rF9DaY7fC76Ecb8mMwxhAXjNVzoixfjJeYLbIZ6RdVVOEkJiLkOztM2%2BpwfxFVB%2B67tsVzCbXTYypawWvqc0%2FLgH%2F53QY7ZkQ6DaF%2BRC%2BirEOx1QO9XCsS8jpE5sDgl9H86e3CG8DKL0SPFefsHVrvtgEyueReitvoMMNq%2BbzXxEhj4Ch%2FWMp9tCwwQrWHPxCxEhQoQ%2FfoA%2Bpb5sPbRHih77irGTP4wyZQPkWMRP4a1YO5LKVRc5Q%2B6AN9Euy%2BRcYqICLJ%2FpnlzOf0qhHDVpuTuSovwIh2s&__VIEWSTATEGENERATOR=0AF47E56&__EVENTVALIDATION=7xgg%2BLRGOPC5G6VmV%2Fth4YaTNcX0DEoZwxWdp2ZgPCDpOOUF8NLUdW8OSkwl1C9PEO4vlfhHwERii%2ByYB%2BwU%2BibpdtTmL1dqPvBnqLw1hrZiDppfh6xLkxkNztkHwex1wYxFIkwFmxqIiJsFftIJlOzsAk5tOxztPE8E%2BpJ3cXlDSAf91Sv3wnv%2FFIRd4NLgKs2tJRbymQZLRH60yxCa%2BkXHhD%2BogXxX7XdJBGpmOHx3zoxkUPrwbKsCI2PN1FY1ExkSsnr%2F4lq4JErvW%2FuiKNjXVP9Vaucr3N7TaxOt6PtvgNI7MoZRQ2TBAYaGUVj5d3EQ55dTNNi8TlDDKB%2BuI2%2BXSBKBIYZ%2FqKZWp%2FkeJLte8DFvcSweL3iFm3bSB6aFb4UbpwQKSctSbJK226UDysOdT%2BPBihPAs0wqJJz6J4R0q%2B5ExT5h3ziCLngDjT8VUBkEqEMr2HU7TFGvr%2BvCSLPEoLxpFKMGzjCPit2kncljviK08fbFm211pbOjkHG3LzqrKtj%2F%2BNqULLZ7ln90UbrC0xcVVk6bZXEUW4aVcj8Ihnk4LyMi9Nv%2F2jdYjj1i2IjUwPktPVo%2BPCinQ2N209PuC5QkOV01OqIDcttGsswnBmlBzU1wIyVccCrEywNyI04B2vuBVw19KZ6ahNZ4pwjYzYK5bXwy16nomkqUGQ2asSp038rCJGI0qdjTTPu0YoNtUodCC7pQ%2BqZB4cvqyR%2B2yGfXUaiBw4KW9clH5YGPDBWxxXWn5BfPwPOr%2BcKygKjp2rGJim4iOFZcDuAS2LzZtsRYaw3ZtyGUts12MgYulWdR2GC4rCra9J3fVaoO2KzDWopJZ4bQAZ6U%2FcsKWLsKrz1k8SzvqwS5pJV0G%2BCZDYlgi1BPPPflM90tknSGZ0u1bAL6FEZ4NEiLumCfwH5%2BWCDbdx5EfraHSik3a1801MU1e%2BnQ8b8gYxDNQ4eHIk7R9yQZKra846thUrDzNKzYHzwyKWWqLbVjCV9Ho%2FItzpAjdHLd2fyjVx4C3705Av9lNdVDo73st7vzc3vOVFvIBoEtFsXeewDzA4HXwrA%3D&__VIEWSTATEENCRYPTED=&__ASYNCPOST=true&"
                headers = {
                    'Accept': '*/*',
                    'Accept-Language': 'en-US,en;q=0.9',
                    'Cache-Control': 'no-cache',
                    'Connection': 'keep-alive',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                    'Origin': 'https://www.cclerk.hctx.net',
                    'Referer': 'https://www.cclerk.hctx.net/applications/websearch/FRCL_R.aspx',
                    'Sec-Fetch-Dest': 'empty',
                    'Sec-Fetch-Mode': 'cors',
                    'Sec-Fetch-Site': 'same-origin',
                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
                    'X-MicrosoftAjax': 'Delta=true',
                    'X-Requested-With': 'XMLHttpRequest',
                    'sec-ch-ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"',
                    'sec-ch-ua-mobile': '?0',
                    'sec-ch-ua-platform': '"macOS"',
                    'Cookie': 'f5avraaaaaaaaaaaaaaaa_session_=EEDCBLDDHKHFJGCCMEPIJCMNKOKKMCGPLBDEIBDDGNGHBLJONAGPGPDOCCFOEEPBPBNDHKPPHAFGCHBPLGFAHKGBGMHDOOOHHEMAFPDLMJDNEMCICLAJKDHMGMLKBKIH; ASP.NET_SessionId=nk2vwipmwyd5v2cbszihxuhl'
                }
                response = requests.post(url, data=payload, headers=headers)
                print(f"Running Page: {page} | Status: {response.status_code}")
                if not response.ok:
                    print("‚ùå Failed to fetch page", page)
                    break

                soup = BeautifulSoup(response.text, "html.parser")
                rows = soup.select("#ctl00_ContentPlaceHolder1_GridView1 tr")

                if not rows:
                    print("‚ö†Ô∏è No more rows found. Stopping.")
                    break

                row_count = 1

                for tr in rows:

                    if row_count >= 3+1:
                        found = False
                        value = None
                        first_workflow = False
                        second_workflow = False


                        document_element = tr.find("a", id=f"ctl00_ContentPlaceHolder1_GridView1_ctl0{row_count-1}_HyperLinkDocIDEC")
                        document_url = f"https://www.cclerk.hctx.net/applications/websearch/{document_element.get('href')}"

                        document_id = document_element.text
                        sale_date = tr.find("span", id=f"ctl00_ContentPlaceHolder1_GridView1_ctl0{row_count-1}_lblSaleDate").text
                        file_date = tr.find("span", id=f"ctl00_ContentPlaceHolder1_GridView1_ctl0{row_count-1}_lblFileDate").text
                        address = None
                        zip_code = None
                        state = None
                        city = None
                        instrument_id = None

                        supabase = get_supabase_client()
                        document_checker = supabase.table("properties_duplicate").select("id").eq("case_number",
                                                                                               document_id).eq("foreclosure_flag", True).execute()
                        if not document_checker.data:
                            while not found:
                                if not first_workflow:
                                    raw = self.download_and_analyze_pdf(document_url)
                                    if "```json" in raw:
                                        raw = raw.replace("```json", '').replace('```', '')

                                    print(raw)
                                    data = json.loads(raw)
                                    if data and 'found' in data and data["found"] == False:
                                        instrument_id = data.get('instrument_id', None)
                                        first_workflow = True

                                    elif data and 'found' in data and data["found"] == True:
                                        address = data.get('address', None)
                                        zip = data.get('zip', None)
                                        state = data.get('state', None)
                                        city = data.get('city', None)
                                        instrument_id = data.get('instrument_id', None)
                                        first_workflow = True
                                        found = True

                                        sale_date_obj = datetime.strptime(sale_date, "%m/%d/%Y").date()
                                        file_date_obj = datetime.strptime(file_date, "%m/%d/%Y").date()
                                        data = {
                                            "address_full": address,
                                            "city": city,
                                            "state": state,
                                            "zip": zip,
                                            "foreclosure_flag": True,
                                            "case_number": instrument_id,
                                            "auction_date": file_date_obj.isoformat() if sale_date_obj else None,
                                        }
                                        response = supabase.table("properties_duplicate").insert(data).execute()
                                        print("‚úÖ Inserted:", data)

                                        break

                                elif not second_workflow and instrument_id:
                                    document_url = self.scrape_second_workflow(document_id)
                                    if document_url:
                                        raw = self.download_and_analyze_pdf(document_url)

                                        if "```json" in raw:
                                            raw = raw.replace("```json", '').replace('```', '')
                                        print(raw)
                                        data = json.loads(raw)
                                        if data and 'found' in data and data["found"]:
                                            address = data.get('address', None)
                                            zip = data.get('zip', None)
                                            state = data.get('state', None)
                                            city = data.get('city', None)
                                            instrument_id = data.get('instrument_id', None)
                                            second_workflow = True
                                            found = True

                                            sale_date_obj = datetime.strptime(sale_date, "%m/%d/%Y").date()
                                            file_date_obj = datetime.strptime(file_date, "%m/%d/%Y").date()
                                            data = {
                                                "address_full": address,
                                                "city": city,
                                                "state": state,
                                                "zip": zip,
                                                "foreclosure_flag": True,
                                                "case_number": instrument_id,
                                                "auction_date": file_date_obj.isoformat() if sale_date_obj else None,
                                            }
                                            response = supabase.table("properties_duplicate").insert(data).execute()
                                            print("‚úÖ Inserted:", data)

                                            break
                                    else:
                                        second_workflow = True
                                        break
                    row_count += 1

                page += 1

        except Exception as e:
            print("‚ùå Error:", e)


    def scrape_second_workflow(self, value):
        try:
            url = "https://cclerk.hctx.net/Applications/WebSearch/RP.aspx"

            payload = f'__EVENTTARGET=&__EVENTARGUMENT=&__VIEWSTATE=pOMKBNskkyqZG2DC%2B0Sje00o%2B9%2FQBHhvoTMWkePLCQFmV%2BpNW9VLvnv7Q%2F6OMM0erCf2pd8OAQ4pUcit9hMsRQ1QrZ4jlBnHjAD8Wtwzsl1lnajNVzNaLypmh%2FIf2M%2FhSqbsy4aUnzU91zQSMbYEXAViEj6%2BniXR3Svxz921nruBUBzJVLNSWjpuXilgdkublqBfl2M1Dw8NYMRTNldXMoHJ05DgDI9vRPP%2BAtrqDmTbY6H%2BuCRavntQarJn8zCiUdf%2B0UclnUZiLFzfR7WX440tJGH72xIQNp6%2BhR2vJ7nsRpDvJxFATjtdJjbH5xvgkxwCrSn8EotbESlU%2Fj1btLg4Pwv5QdCzr1OZV3j6Y4GV3GEUchWMzf%2BnX66gNGRiAHIQecpongnyl1wcvpHayn09H%2FLnAx48XJLyxXq3hyaecMy%2Bsw%2FlvxH%2F6IP6Jb3R8AzxtklaVvXhMy7Fefa3W0sfk8Q7B3AnNO8Pn%2F4poqUuQkLy05vXQjtgbZ2%2FaIL4HFH1rKbxDdAEaRKKVA%2F8b%2Fs6Jf8eFtjWUu0STvkLRI13Pmdu2JFtKk9Z8J8FJ%2Fc%2B0Qxt2TlEh%2Fu639ScimKVyWz8kpURePMmyxoL76kshwTkIiXIGWgpZi8Ctq4PfjlRVCFCdVlL0nRqgoXFgWLBLs1%2BRulwsOK4x0UhW0poYIYKF3ov3Qb4zYxGA6f9vwTHcs8L1xDRz%2B1hF9nlPb1XhOalL7QNmlZeW3oPnSR%2FpPfCfQLWq%2BDRmlx6HRmCN3XSe5TTQFIxWrRPuD%2Fwcy%2Br2r18x5rvgpOVnV%2Bl7JBFsClCWtYyH0lZIUU2%2FoceGYgw2MC3zsCmq7YYZxzMppiZw%2BX7b6MdhiKc3wFwxz4fmITQeLjyRcjTn64dNWZu5aTGf1jZaoeOf9S53AEZhEe4OwxV7Qu7mYfIDkrTtDFKU23tXN0zBKbSPrQbeqBfw8b7da6Hacytt5ezucb5461MPYauN92H7JoB0qpSi%2FUN%2Fc7MP7p5xPhRIy%2FbTrwVMwE3%2FmV01QZU7CaoE0iKkU8ddM9Cc%2FdwIzkxLHzrz2NGed7JwUR8XSV3szjx%2BOpspsCgU50FYTdCU94mYEm1fWTZbxWFMlqCKDhlAHl7rUEZzUJ1urp2tIHylbptsPGfpGrjR0BfFHXBwZ%2FeIL%2Bmp3cIHKo%2Bg1MLX8nrEW9QuiczD1XD3%2BzqoFWaObnxQ3%2BcKkKY%2Fte8AChTOfeWTHjKp54%2Few6AfDj1k1xPf%2FDpVnAPy%2B%2BeJz1qvK7ecA5wSFTZ9RR16WND8aJCN3d4AKc%2BvTckwyZoE2WdQyYXv%2BXGP9%2BKGZ0%3D&__VIEWSTATEGENERATOR=C6E70338&__VIEWSTATEENCRYPTED=&__EVENTVALIDATION=l7a1140rOkcJLRNsp2AQr5a6Y2UBBLU1gZ8weQ%2BgapKXXMc2TcXUXb%2FoUVCcLBc88WYkFx7qIMN0Fej3diCTJIMMlYFcwbOofR3eEL6fL6oL8EBnMMNcCybUlPeFo6zryki4VYVqqpylUVRdmV4WVvX15yaiGiBsxalK7nh%2BdOyNfSQJQcDDt3SKpLHuLZdsJlt1MSCwYxuab1EiwrYV%2BebBFQzhzr9BZqzSE4iCY9quBb%2F5A7f%2B%2B45p0ZN6fEU876TyF6o4KjTL5fx2ZCkqQAe3tFjAg75fVgB8WTKLgziQeuQacqrYamA5Hvsdvt4gjyYmkSlkLpxH4do3%2FNkRJGljKZMCcHr5OPICS87cw5k2yQMaf2lHNWlo%2BRbm6UTIsOO6pU5s78x1LAuXKVNNOUVBgstM5p3WN5wjGCCwt6a8ga633sC22V4M4BRlOu3zyqPItE8NKa4QtGAQcEq5sfjsFq6SWdbUNLwh0n4zmILyzVrLk8WN52l35pG0oKdw6C2ZA%2BitOt770IezX8HbgtFaFwd5kbs%2BaDoDXpoWw00He3Bb023azSyKN9Hu%2F%2BW%2BmQWrjxnLX4e%2FHbPMDyrZ74AwlMRoUASbKwKqyHfZRuM%3D&ctl00%24ContentPlaceHolder1%24txtFileNo={value}&ctl00%24ContentPlaceHolder1%24txtFilmCd=&ctl00%24ContentPlaceHolder1%24txtFrom=&ctl00%24ContentPlaceHolder1%24txtTo=&ctl00%24ContentPlaceHolder1%24txtOR=&ctl00%24ContentPlaceHolder1%24txtEE=&ctl00%24ContentPlaceHolder1%24txtNameTee=&ctl00%24ContentPlaceHolder1%24txtDesc=&ctl00%24ContentPlaceHolder1%24txtInstrument=&ctl00%24ContentPlaceHolder1%24txtVolNo=&ctl00%24ContentPlaceHolder1%24txtPageNo=&ctl00%24ContentPlaceHolder1%24txtSection=&ctl00%24ContentPlaceHolder1%24txtLot=&ctl00%24ContentPlaceHolder1%24txtBlock=&ctl00%24ContentPlaceHolder1%24txtUnit=&ctl00%24ContentPlaceHolder1%24txtAbstract=&ctl00%24ContentPlaceHolder1%24txtOutLot=&ctl00%24ContentPlaceHolder1%24txtTract=&ctl00%24ContentPlaceHolder1%24txtReserve=&ctl00%24ContentPlaceHolder1%24btnSearch=Search'
            headers = {
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
                'Accept-Language': 'en-US,en;q=0.9',
                'Cache-Control': 'max-age=0',
                'Connection': 'keep-alive',
                'Content-Type': 'application/x-www-form-urlencoded',
                'Origin': 'https://cclerk.hctx.net',
                'Referer': 'https://cclerk.hctx.net/Applications/WebSearch/RP.aspx',
                'Sec-Fetch-Dest': 'document',
                'Sec-Fetch-Mode': 'navigate',
                'Sec-Fetch-Site': 'same-origin',
                'Sec-Fetch-User': '?1',
                'Upgrade-Insecure-Requests': '1',
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
                'sec-ch-ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"',
                'sec-ch-ua-mobile': '?0',
                'sec-ch-ua-platform': '"macOS"',
                'Cookie': 'f5avraaaaaaaaaaaaaaaa_session_=FOMAABPKNLDCNNPMOEIDJHLGGGBDIHJDIMHJHFNLIJBJKGLOILHPBCIGAEAJHFDNONADJEJGANLFOIKKMNOACOJJMPHLBJKNEBLLGIHPBIILODIACJKDLDKLIKFPPJOP; ASP.NET_SessionId=ngtuag543l01m4xfpwad1pur; f5avraaaaaaaaaaaaaaaa_session_=EPKMNLANHDJMCGGEDAKHGBFEGHKHNILOKDINNLLNOCIDOEJDLBGNDENKHJBFPGILCMADCBDJJCFPCIIEPOEABLOHOPEJHFGKADJNPEKNHDAFHJNHMEKPIIKABMGBCOIG; f5avraaaaaaaaaaaaaaaa_session_=JEBNPPLGGDDBMBDAEMNLKLDODODCJMBOEIHNONPCNCOMGGBPPEOGLMLEGNIIIOOGEMJDOMBEAACDCIICCMPAEMAIGABCCLJIBDHAAGCNIAJOHLGAABFMOBAEOJNGHLDO'
            }

            response = requests.request("POST", url, headers=headers, data=payload)
            print(f"Running second workflow: {value} | Status: {response.status_code}")
            if response.ok:
                soup = BeautifulSoup(response.text, "html.parser")

                a_tag = soup.find("a", id="ctl00_ContentPlaceHolder1_ListView1_ctrl0_HyperLinkFCEC")
                if a_tag:
                    href_value = a_tag["href"]
                    href = "https://www.cclerk.hctx.net/Applications/Websearch/" + href_value
                    print(f"Found href for second workflow: {href} | {value}")
                    return href
            return None
        except Exception as e:
            print(f"Error while running second workflow: {str(e)}")
            return None

if __name__ == "__main__":
    main = Main()
    main.run()
    #main.scrape_second_workflow("20130070986")
    #Main().download_and_analyze_pdf("https://www.cclerk.hctx.net/applications/websearch/ViewECdocs.aspx?ID=bWXqGXasMeuE7YZXR3B2NW0UevloRcvKy8HaVZSCe+AhFoeMXKdyG2R1jokDwvsNLgUqfD+XFOBgSs7NjJr5B/mlNEIO8Olbaaybd3VDfvQmttKScYmRoJuoYfDNZzBL")
